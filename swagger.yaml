swagger: '2.0'
info:
  description: This is DataHub API.
  version: "v1"
  title: Datahub API

  contact:
    email: dataportal-edirex@ics.muni.cz

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


paths:
  /patient:
    get:
      summary: searches patients
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Patient'
        400:
          description: service out
  /sample:
    get:
      summary: searches samples
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Sample'
        400:
          description: service out
  /cna:
    get:
      summary: searches cnas
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'
        400:
          description: service out


  /sample/{sampleId}:
    get:
      summary: returns specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Sample'
        400:
          description: bad input parameter

  /sample/{sampleId}/cna:
    get:
      summary: searches cna records for specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'
        400:
          description: bad input parameter

  /sample/{sampleId}/expression:
    get:
      summary: searches expression records for specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Expression'
        400:
          description: bad input parameter
  /sample/{sampleId}/mutation:
    get:
      summary: searches mutation records for specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Mutation'
  /sample/{sampleId}/cna/{stable_id}:
    get:
      summary: searchers cna for specific sample with specific stable_id
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      - name: "stable_id"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results mathing criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'

  /sample/{sampleId}/expression/{stable_id}:
    get:
      summary: searchers expression for specific sample with specific stable_id
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      - name: "stable_id"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results mathing criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Expression'  
  /studies:
    get:
      summary: list all avaible studies
      produces:
        - application/json
      responses:
        200:
          description: search results
          schema:
            type: array
            items:
              $ref: '#/definitions/Studies'
  /studies/{name}/samples:
    get:
      summary: list samples for specific studies
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results mathing criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Studies1'
          
definitions:
  Patient:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        example: 11111000206
      name:
        type: string
        example: 'Zrovna jmeno tady asi nebude.'
  Sample:
    type: object
    required:
    - sample_id
    - patient_id
    - institution
    - date_of_collection
    - age_at_collection
    - sample_origin
    - site_of_sampled_metastasis
    - implant_site
    - implant_type
    - strain
    - drug_data_available
    - fingerprint_available
    - gep_ilmn_rnaseq_available
    - genetics_available
    - sanger_seq_available
    - illumina_wes_available
    - gene_panel
    - oncotree_code
    properties:
      sample_id:
        type: string
        example: CRC0691LM
      patient_id:
        type: integer
        example: 11000206
      institution:
        type: string
        example: 'UNITO'
      date_of_collection:
        type: string
        example: 'something here'
      age_at_collection:
        type: string
        example: 'something here'
      sample_origin:
        type: string
        example: 'something here'
      site_of_sampled_metastasis:
        type: string
        example: 'something here'
      implant_site:
        type: string
        example: 'something here'
      implant_type:
        type: string
        example: 'something here'
      strain:
        type: string
        example: 'something here'
      drug_data_available:
        type: string
        example: 'something here'
      fingerprint_available:
        type: string
        example: 'something here'
      gep_ilmn_rnaseq_available:
        type: string
        example: 'something here'
      genetics_available:
        type: string
        example: 'something here'
      sanger_seq_available:
        type: string
        example: 'something here'
      illumina_wes_available:
        type: string
        example: 'something here'
      gene_panel:
        type: string
        example: 'something here'
      oncotree_code:
        type: string
        example: 'something here'

  Cna:
    type: object
    required:
    - sample_id
    - entrez_gene_id
    - value
    - stable_id
    properties:
      sample_id:
        type: string
        example: CRC0691LM
      entrez_gene_id:
        type: integer
        example: 1
      value:
        type: integer
        example: 2
      stable_id:
        type: string
        example: gistic
  Expression:
    type: object
    required:
    - sampleId
    - hugoSymbol
    - entrezGeneId
    - stable_id
    properties:
      sampleId:
        type: string
        example: CRC0691LM
      entrezGeneId:
        type: integer
        example: 100132074
      hugoSymbol:
        type: string
        example: A2M
      stable_id:
        type: string
        example: rna_seq_mrna
  MetaFile:
    type: object
    required:
    - genetic_alteration_type
    - datatype
    - stable_id
    - show_profile_in_analysis_tab
    - profile_description
    - profile_name
    - swissprot_identifier
    - data_filename
    properties:
      genetic_alteration_type:
        type: string
        example: MUTATION_EXTENDED
      datatype:
        type: string
        example: MAF
      stable_id:
        type: string
        example: mutations
      show_profile_in_analysis_tab:
        type: string
        example: true
      profile_description:
        type: string 
        example: Mutation data
      profile_name:
        type: string 
        example: Mutations
      swissprot_identifier:
        type: string 
        example: accession
      data_filename:
        type: string
        example: mutations_extended.maf
  Studies:
    type: object
    required:
    - name
    - identifier
    - cancer_type
    - description
    - short_name
    properties:
      name:
        type: string
        example: 500 colorectal cancer models (ircc)
      identifier:
        type: string
        example: ircc_crc_feb2018
      cancer_type:
        type: string
        example: crc  Colorectal cancer colorectal,colon  tomato  tissue
      description:
        type: string
        example: 500 colorectal cancer models (ircc)
      short_name:
        type: string
        example: IRCC CRC
  Studies1:
    type: object
    required:
    - name
    - identifier
    - cancer_type
    - description
    - short_name
    properties:
      name:
        type: string
        example: UNITO
      identifier:
        type: string
        example: ircc_crc_feb2018
      cancer_type:
        type: string
        example: crc  Colorectal cancer colorectal,colon  tomato  tissue
      description:
        type: string
        example: 500 colorectal cancer models (ircc)
      short_name:
        type: string
        example: IRCC CRC
      samples:
        type: array
        items:
          $ref: '#/definitions/Sample'
  
  Mutation:
    type: object
    required:
    - sampleId
    - hugoSymbol
    - entrezGeneId
    - ncbiBuild
    - chromosome
    - startPosition
    - endPosition
    - strand
    - tumorSampleBarcode
    - variantClassification
    - hgvsShort
    - proteinPosition
    - swissprot
    properties:
      sampleId:
        type: string
        example: CRC0691LM
      entrezGeneId:
        type: integer
        example: 100132074
      hugoSymbol:
        type: string
        example: A2M
      ncbiBuild:
        type: number
        example: 37.1
      chromosome:
        type: integer
        example: 12
      startPosition:
        type: integer
        example: 9243799
      endPosition:
        type: integer
        example: 9243799
      strand:
        type: integer
        example: -1
      tumorSampleBarcode:
        type: string
        example: CRC0112LM
      variantClassification:
        type: string
        example: Missense_Mutation
      hgvsShort:
        type: string
        example: p.R823W
      proteinPosition:
        type: integer
        example: 823
      swissprot:
        type: string
        example: A0A0A0MT16

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /RadimPesa/datahub/v1
schemes:
 - https
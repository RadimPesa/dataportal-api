swagger: '2.0'
info:
  description: This is DataHub API.
  version: "v1"
  title: Datahub API

  contact:
    email: dataportal-edirex@ics.muni.cz

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


paths:
  /patients:
    get:
      summary: searches patients
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Patient'
  /samples:
    get:
      summary: searches samples
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Sample'
  /cnas:
    get:
      summary: searches cnas
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'
  /mutations:
    get:
      summary: searches muttation records
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Mutation'
  /samples/{sampleId}:
    get:
      summary: returns specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Sample'
  /samples/{sampleId}/cnas:
    get:
      summary: searches cna records for specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'
        400:
          description: bad input parameter

  /samples/{sampleId}/expressions:
    get:
      summary: searches expression records for specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Expression'
        400:
          description: bad input parameter
  /samples/{sampleId}/mutations:
    get:
      summary: searches mutation records for specific sample
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Mutation'
  /samples/{sampleId}/cnas/{stable_id}:
    get:
      summary: searchers cna for specific sample with specific stable_id
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      - name: "stable_id"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results mathing criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'

  /samples/{sampleId}/expressions/{stable_id}:
    get:
      summary: searchers expression for specific sample with specific stable_id
      parameters:
      - name: "sampleId"
        in: "path"
        required: true
        type: "string"
      - name: "stable_id"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results mathing criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Expression'  
  /study:
    get:
      summary: list all avaible studies
      produces:
        - application/json
      responses:
        200:
          description: search results
          schema:
            type: array
            items:
              $ref: '#/definitions/Study'
  /study/{name}/samples:
    get:
      summary: list samples for specific studies
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results mathing criteria, returns studies with samples
          schema:
              $ref: '#/definitions/StudyWithSamples'
  /tmplists:
    get:
      summary: Get all of the temporary stored lists of samples
      produces:
        - application/json
      responses:
        200:
          description: Return list of lists ids.
          schema:
            type: array
            items:
              $ref: '#/definitions/Tmplist'
    post:
      summary: Upload list of sample ids
      produces:
        - application/json
      parameters:
      - name: samples
        in: body
        required: true
        description: List of sample ids to store.
        schema:
          $ref: '#/definitions/PostTmpList'
      responses:
        201:
          description: OK
          schema:
            $ref: '#/definitions/TmpListId'

  /tmplists/{listId}:
    get:
      summary: Store and access temporary created lists of samples
      parameters:
      - name: "listId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: Return list of samples ids.
          schema:
            type: array
            items:
              type: string
              example: CRC0691LM
  /tmplists/{listId}/samples:
    get:
      summary: Return sample records 
      parameters:
      - name: "listId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Sample'

  /tmplists/{listId}/cnas:
    get:
      summary: Return cna records 
      parameters:
      - name: "listId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Cna'
  /tmplists/{listId}/expressions:
    get:
      summary: Return cna records 
      parameters:
      - name: "listId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Expression'
  /tmplists/{listId}/mutations:
    get:
      summary: Return cna records 
      parameters:
      - name: "listId"
        in: "path"
        required: true
        type: "string"
      produces:
        - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Mutation'

definitions:
  Patient:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        example: 11111000206
      name:
        type: string
        example: 'Zrovna jmeno tady asi nebude.'
  Sample:
    type: object
    required:
    - sample_id
    - patient_id
    - institution
    - date_of_collection
    - age_at_collection
    - sample_origin
    - site_of_sampled_metastasis
    - implant_site
    - implant_type
    - strain
    - site_of_primary
    - cancer_study_identifier
    - MS_status
    - sample_class
    properties:
      sample_id:
        type: string
        example: CRC0691LM
      patient_id:
        type: integer
        example: 11000206
      institution:
        type: string
        example: 'UNITO'
      date_of_collection:
        type: string
        example: 'something here'
      age_at_collection:
        type: string
        example: 'something here'
      sample_origin:
        type: string
        example: 'something here'
      site_of_sampled_metastasis:
        type: string
        example: 'something here'
      implant_site:
        type: string
        example: 'something here'
      implant_type:
        type: string
        example: 'something here'
      strain:
        type: string
        example: 'something here'
      site_of_primary:
        type: string
        example: 'something here'
      cancer_study_identifier:
        type: string
        example: 'something here'
      MS_status:
        type: string
        example: 'stable'
        enum: ['stable','instable']
      sample_class:
        type: string


  Cna:
    type: object
    required:
    - sample_id
    - entrez_gene_id
    - value
    - stable_id
    properties:
      sample_id:
        type: string
        example: CRC0691LM
      entrez_gene_id:
        type: integer
        example: 1
      value:
        type: integer
        example: 2
      stable_id:
        type: string
        example: gistic
  Expression:
    type: object
    required:
    - sampleId
    - hugoSymbol
    - entrezGeneId
    - stable_id
    properties:
      sampleId:
        type: string
        example: CRC0691LM
      entrezGeneId:
        type: integer
        example: 100132074
      hugoSymbol:
        type: string
        example: A2M
      stable_id:
        type: string
        example: rna_seq_mrna
  MetaFile:
    type: object
    required:
    - genetic_alteration_type
    - datatype
    - stable_id
    - show_profile_in_analysis_tab
    - profile_description
    - profile_name
    - swissprot_identifier
    - data_filename
    properties:
      genetic_alteration_type:
        type: string
        example: MUTATION_EXTENDED
      datatype:
        type: string
        example: MAF
      stable_id:
        type: string
        example: mutations
      show_profile_in_analysis_tab:
        type: string
        example: true
      profile_description:
        type: string 
        example: Mutation data
      profile_name:
        type: string 
        example: Mutations
      swissprot_identifier:
        type: string 
        example: accession
      data_filename:
        type: string
        example: mutations_extended.maf
  Study:
    type: object
    required:
    - name
    - cancer_study_identifier
    - cancer_type_id
    - description
    - short_name
    properties:
      name:
        type: string
        example: 500 colorectal cancer models (ircc)
      cancer_study_identifier:
        type: string
        example: ircc_crc_feb2018
      cancer_type_id:
        type: integer
        example: 1234
      description:
        type: string
        example: 500 colorectal cancer models (ircc)
      short_name:
        type: string
        example: IRCC CRC
  StudyWithSamples:
    type: object
    required:
    - studies
    - samples
    properties:
      studies:
          $ref:  '#/definitions/Study'
      samples:
        type: array
        items:
          $ref: '#/definitions/Sample'
  
  Mutation:
    type: object
    required:
    - sampleId
    - hugoSymbol
    - entrezGeneId
    - ncbiBuild
    - chromosome
    - startPosition
    - endPosition
    - strand
    - variantClassification
    - hgvsShort
    - proteinPosition
    - swissprot
    properties:
      sampleId:
        type: string
        example: CRC0691LM
      entrezGeneId:
        type: integer
        example: 100132074
      hugoSymbol:
        type: string
        example: A2M
      ncbiBuild:
        type: number
        example: 37.1
      chromosome:
        type: integer
        example: 12
      startPosition:
        type: integer
        example: 9243799
      endPosition:
        type: integer
        example: 9243799
      strand:
        type: integer
        example: -1
      variantClassification:
        type: string
        example: Missense_Mutation
      hgvsShort:
        type: string
        example: p.R823W
      proteinPosition:
        type: integer
        example: 823
      swissprot:
        type: string
        example: A0A0A0MT16
  TmpListId:
    type: object
    required:
    - tmplistid
    properties:
      tmplistid:
        type: string
        example: "1234"
  PostTmpList:
    type: object
    properties:
      sample_list:
        type: array
        items: 
          type: string
          example: CRC0691LM
  Tmplist:
    type: object
    properties:
      tmp_list_id:
        type: integer
        example: 3
      sample_ids:
        type: array
        items:
          type: string
          example: CRC0691LM
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /RadimPesa/datahub/v1
schemes:
 - https